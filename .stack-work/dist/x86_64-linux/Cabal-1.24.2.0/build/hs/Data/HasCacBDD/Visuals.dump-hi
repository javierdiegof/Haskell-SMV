
==================== FINAL INTERFACE ====================
2018-07-11 20:58:33.971568 UTC

interface HasCacBDD-0.1.0.0-9yTDjY7ApZf41Py31f2KZZ:Data.HasCacBDD.Visuals 8002
  interface hash: bf502eeacf6a3db3402a9d91d932732d
  ABI hash: 3b24058ad2b90ba1bb44eea632928e65
  export-list hash: 376595ce87d69bf538567e5b7a4d3d62
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a6e5a03f4dc0c0089787132b28ca3379
  sig of: Nothing
  used TH splices: False
  where
exports:
  Data.HasCacBDD.Visuals.genGraph
  Data.HasCacBDD.Visuals.genGraphWith
  Data.HasCacBDD.Visuals.showGraph
  Data.HasCacBDD.Visuals.svgGraph
module dependencies: Data.HasCacBDD
package dependencies: QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-boot-th-8.0.2@ghc-boot-th-8.0.2
                      ghc-prim-0.5.0.0 integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      process-1.4.3.0@process-1.4.3.0
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      template-haskell-2.11.1.0
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
import  -/  Data.HasCacBDD 4781fbbf6dc196d7b8aaac1e053750d2
  exports: cace8b9921bfbb660425a98c929e0488
  Bdd 7882cf437949339fe7d814b40ff592fb
  allVarsOf 5ac7d9bcf878582ef6517e9ccf0c0f7a
  bot a43ade0e7a3d89b19c334ad35e20a45a
  elseOf a70bdd3f0b898a8225134a070c2e2234
  firstVarOf adee9a4d6677e3e1bf58c386bc9995fc
  thenOf 47c9b7f77119b575369e0806c207ebf7
  top a2c09e1b006b67c9b9d313e6dd3d2a36
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO.Handle ba98a5b34d78cbf48b41fe58a3735c69
import  -/  base-4.9.1.0:GHC.IO.Handle.Text b65719f3b262b071ab1aabeb72fc9d8b
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  process-1.4.3.0@process-1.4.3.0:System.Process 1ee59b956b7cad68338d3f6ab3e772ed
dc02f4060eef362ffadcb8687f24f6c2
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.HasCacBDD.Visuals.$trModule2
                   Data.HasCacBDD.Visuals.$trModule1) -}
72410f77a342d90604d81a3fe9027be7
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Data.HasCacBDD.Visuals"#) -}
1fc76c18bf7fdddf2a21c2a3b19ad5a0
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "HasCacBDD-0.1.0.0-9yTDjY7ApZf41Py31f2KZZ"#) -}
8af9afe675ee26875c6eaaeadfb732b8
  genGraph :: Data.HasCacBDD.Bdd -> GHC.Base.String
  {- Arity: 1,
     Unfolding: (Data.HasCacBDD.Visuals.genGraphWith
                   GHC.Show.$fShowInt_$cshow) -}
09ae404fa582d2a9765ee4739a8db6f0
  genGraphWith ::
    (GHC.Types.Int -> GHC.Base.String)
    -> Data.HasCacBDD.Bdd -> GHC.Base.String
  {- Arity: 2, Strictness: <L,C(U)><L,U(U,U)> -}
bc164507f7cd5003c79d0cf17d63c311
  showGraph :: Data.HasCacBDD.Bdd -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.HasCacBDD.Visuals.showGraph1
                  `cast`
                (<Data.HasCacBDD.Bdd>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
220a755df9139935524a46336bb9aef9
  showGraph1 ::
    Data.HasCacBDD.Bdd
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: (\ (b :: Data.HasCacBDD.Bdd)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.runInteractiveProcess1
                        (GHC.CString.unpackCString# "/usr/bin/dot"#)
                        (GHC.Types.:
                           @ GHC.Base.String
                           (GHC.CString.unpackCString# "-Tx11"#)
                           (GHC.Types.[] @ GHC.Base.String))
                        (GHC.Base.Nothing @ GHC.IO.FilePath)
                        (GHC.Base.Nothing @ [(GHC.Base.String, GHC.Base.String)])
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,,,) inp ds ds2 pid ->
                 case GHC.IO.Handle.Text.hPutStr2
                        inp
                        (Data.HasCacBDD.Visuals.genGraphWith GHC.Show.$fShowInt_$cshow b)
                        GHC.Types.False
                        ipv of ds3 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Internals.wantWritableHandle1
                        @ ()
                        GHC.IO.Handle.hFlush2
                        inp
                        GHC.IO.Handle.Internals.flushWriteBuffer1
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.hClose1 inp ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                 case pid of ww { System.Process.Common.ProcessHandle ww1 ww2 ->
                 case System.Process.$wwaitForProcess
                        ww1
                        ww2
                        ipv6 of ds6 { (#,#) ipv8 ipv9 ->
                 (# ipv8, GHC.Tuple.() #) } } } } } } }) -}
7059beb6a2f27e5f560b7854e15dd0e7
  svgGraph :: Data.HasCacBDD.Bdd -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.HasCacBDD.Visuals.svgGraph1
                  `cast`
                (<Data.HasCacBDD.Bdd>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
3791ad2f73f486585e25b9996474f3cd
  svgGraph1 ::
    Data.HasCacBDD.Bdd
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: (\ (b :: Data.HasCacBDD.Bdd)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Process.runInteractiveProcess1
                        (GHC.CString.unpackCString# "/usr/bin/dot"#)
                        (GHC.Types.:
                           @ GHC.Base.String
                           (GHC.CString.unpackCString# "-Tsvg"#)
                           (GHC.Types.[] @ GHC.Base.String))
                        (GHC.Base.Nothing @ GHC.IO.FilePath)
                        (GHC.Base.Nothing @ [(GHC.Base.String, GHC.Base.String)])
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,,,) inp out ds pid ->
                 case GHC.IO.Handle.Text.hPutStr2
                        inp
                        (Data.HasCacBDD.Visuals.genGraphWith GHC.Show.$fShowInt_$cshow b)
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.hSetBinaryMode1
                        inp
                        GHC.Types.False
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.hSetBinaryMode1
                        out
                        GHC.Types.False
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Internals.wantWritableHandle1
                        @ ()
                        GHC.IO.Handle.hFlush2
                        inp
                        GHC.IO.Handle.Internals.flushWriteBuffer1
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.IO.Handle.hClose1 inp ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        out
                        ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                 case pid of ww { System.Process.Common.ProcessHandle ww1 ww2 ->
                 case System.Process.$wwaitForProcess
                        ww1
                        ww2
                        ipv12 of ds8 { (#,#) ipv14 ipv15 ->
                 (# ipv14,
                    case Data.OldList.lines ipv13 of wild1 {
                      [] -> case GHC.List.scanl2 ret_ty GHC.Base.String of {}
                      : ds9 xs -> Data.OldList.unlines xs } #) } } } } } } } } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

